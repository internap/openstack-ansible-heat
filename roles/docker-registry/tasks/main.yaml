---
# Playbook to ensure a docker trusted registry is installed and configured correctly

- name: get your cloud authentication info to push to the Docker Registry swift storage driver
  connection:             local
  os_client_config:
    clouds:
      - "{{ os_cloud_name }}"

- debug:
    msg:                  "{{ openstack.clouds[ 0 ].auth }}"

- name: store Docker Registry hostname play-wide if there is private nodes
  set_fact:
    os_auth_params:       "{{ openstack.clouds[ 0 ].auth }}"

- name: store Docker Registry hostname play-wide if there is private nodes
  set_fact:
    os_auth_region_name:  "{{ openstack.clouds[ 0 ].region_name }}"

- name: Authenticate to the cloud and retrieve the service catalog
  connection:             local
  os_auth:
    cloud:                "{{ os_cloud_name }}"

- debug:
    msg:                  "{{ openstack }}"

- name: share Docker Registry hostname play-wide if there is at least one private nodes
  when:                   private_node_number > 0
  set_fact:
    os_docker_registry:   "{{ groups[ 'private_nodes' ][ ( private_node_number | int ) - 1 ] }}"

- name: share Docker Registry hostname play-wide if there is only public nodes
  when:                   private_node_number == 0
  set_fact:
    os_docker_registry:   "{{ groups[ 'public_nodes' ][ ( public_node_number | int ) - 1 ] }}"

- debug:
    msg:                  "{{ os_docker_registry }}"

- name: share private IP of Docker Registry
  set_fact:
    os_docker_registry_ip: "{{ hostvars[ os_docker_registry ].privateIPv4 }}"

- debug:
    msg:                  "{{ os_docker_registry_ip }}"

- debug:
    msg:                  "docker run -d -p 5000:5000 --restart=always --name registry \
                               -e REGISTRY_STORAGE=swift \
                               -e REGISTRY_STORAGE_SWIFT_USERNAME={{ os_auth_params.username }} \
                               -e REGISTRY_STORAGE_SWIFT_PASSWORD={{ os_auth_params.password }} \
                               -e REGISTRY_STORAGE_SWIFT_AUTHURL={{ os_auth_params.auth_url }} \
                               -e REGISTRY_STORAGE_SWIFT_TENANT={{ os_auth_params.project_name }} \
                               -e REGISTRY_STORAGE_SWIFT_DOMAIN={{ os_auth_params.project_domain_name }} \
                               -e REGISTRY_STORAGE_SWIFT_REGION={{ os_auth_region_name }} \
                               -e REGISTRY_STORAGE_SWIFT_CONTAINER={{ playbook_name }} \
                               -e REGISTRY_STORAGE_SWIFT_INSECURESKIPVERIFY=yes \
                               registry:2"

- name: ensure Docker Registry is up
  when:                   inventory_hostname == os_docker_registry
  command:                "docker run -d -p 5000:5000 --restart=always --name registry \
                            -e REGISTRY_STORAGE=swift \
                            -e REGISTRY_STORAGE_SWIFT_USERNAME={{ os_auth_params.username }} \
                            -e REGISTRY_STORAGE_SWIFT_PASSWORD={{ os_auth_params.password }} \
                            -e REGISTRY_STORAGE_SWIFT_AUTHURL={{ os_auth_params.auth_url }} \
                            -e REGISTRY_STORAGE_SWIFT_TENANT={{ os_auth_params.project_name }} \
                            -e REGISTRY_STORAGE_SWIFT_DOMAIN={{ os_auth_params.project_domain_name }} \
                            -e REGISTRY_STORAGE_SWIFT_REGION={{ os_auth_region_name }} \
                            -e REGISTRY_STORAGE_SWIFT_CONTAINER={{ playbook_name }} \
                            -e REGISTRY_STORAGE_SWIFT_INSECURESKIPVERIFY=yes \
                            registry:2"
  register:                 docker_registry_up
  until:                    docker_registry_up|success
  retries:                  3
  delay:                    20
  ignore_errors:            yes
  become:                   yes
