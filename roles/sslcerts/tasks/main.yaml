---
# Playbook to ensure docker is installed

- name: ensure certifate directory exists
  file:
    path:             "{{ certs_directory }}"
    state:            directory
    mode:             0755

- name: checking if ssl key exists
  when:               ssl_key_filename is undefined
  stat:
    path:             "{{ certs_directory }}{{ playbook_name }}-{{ inventory_hostname }}.key"
  register:           privatekey_exist

- name: checking if private CSR exists
  when:               ssl_cert_filename is undefined
  stat:
    path:             "{{ certs_directory }}{{ playbook_name }}-{{ inventory_hostname }}.crt"
  register:           csr_exist

- name: if not, generate private key and CSR
  when:               ( ssl_key_filename is undefined and privatekey_exist.stat.exists == False ) or ( ssl_cert_filename is undefined and csr_exist.stat.exists == False )
  shell:              "openssl req -newkey rsa:4096 -nodes -sha256
                        -keyout {{ certs_directory }}{{ playbook_name }}-{{ inventory_hostname }}.key \
                        -x509 -days 365 -subj '/CN={{ hostvars[ inventory_hostname ].privateIPv4 }}' \
                        -out {{ certs_directory }}{{ playbook_name }}-{{ inventory_hostname }}.crt"

- name: copy ssl custom key (if passed as parameter)
  when:               ssl_key_filename is defined
  synchronize:
    src:              "{{ ssl_key_filename }}"
    dest:             "{{ certs_directory }}{{ playbook_name }}-{{ inventory_hostname }}.key"

- name: checking if private CSR exists
  when:               ssl_cert_filename is defined
  synchronize:
    src:              "{{ ssl_cert_filename }}"
    dest:             "{{ certs_directory }}{{ playbook_name }}-{{ inventory_hostname }}.crt"
